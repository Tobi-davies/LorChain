import Head from "next/head";
import React from "react";
// import Image from "next/image";
// import { Inter } from "next/font/google";
// import styles from "@/styles/Home.module.css";
import Header from "@/components/header/header";
import { MdGroup } from "react-icons/md";
import { BsFillPersonFill } from "react-icons/bs";
import Pagination from "@/components/pagination/pagination";
import { useQueries, useQuery } from "react-query";
import axios from "axios";
// import { useQuery } from "react-query/types/react";

// const inter = Inter({ subsets: ["latin"] });

export default function Home() {
  const [currentPage, setCurrentPage] = React.useState<number>(1);
  // console.log(data);

  // const [postsQuery, usersQuery] = useQueries({
  //   queries: [
  //     {
  //       queryKey: ['profile'],
  //       queryFn: () =>
  //         axios
  //           .get('https://jsonplaceholder.typicode.com/posts')
  //           .then((res) => res.data),
  //     },

  //     {
  //       queryKey: ['users'],
  //       queryFn: () =>
  //         axios
  //           .get('https://jsonplaceholder.typicode.com/users')
  //           .then((res) => res.data),
  //     },
  //   ],
  // });

  const fetchProfile = () => {
    const response = axios.get("https://api.github.com/users/Tobi-davies");

    console.log(response, "profile");

    return response;
  };
  const fetchRepos = (page = 1) => {
    const response = axios.get(
      `https://api.github.com/users/Tobi-davies/repos?per_page=4&page=${page}`
    );
    console.log(response, "repos");
    // if (response.status === 200) {
    //   return response.data;
    // }

    return response;
  };

  const [profileQuery, repoQuery] = useQueries([
    { queryKey: ["profile"], queryFn: fetchProfile },
    {
      queryKey: ["repos", currentPage],
      queryFn: () => fetchRepos(currentPage),
    },
  ]);

  const { data: profileData } = profileQuery;
  console.log(profileData, "profileQuery");
  // console.log(repoQuery?.data.data, "repoQuery");
  const { data: repoData } = repoQuery;
  console.log(repoData);

  // const {
  //   data,
  //   //  error, isError,
  //   isLoading,
  //   isSuccess,
  //   //  isFetching
  // } = useQuery(["lllll", currentPage], () => fetchRepos(currentPage), {
  //   keepPreviousData: true,
  //   // onSuccess: (data) => {
  //   //   setTotalRecords(data?.data.length);
  //   // },
  //   retryOnMount: false,
  //   refetchOnWindowFocus: false,
  //   refetchOnMount: false,
  // });

  // console.log(data, "DATA");

  const handlePageChange = (page: number) => {
    setCurrentPage(page);
  };

  return (
    <>
      <Head>
        <title>LorChain</title>
        <meta name="description" content="Generated by create next app" />
        <meta name="viewport" content="width=device-width, initial-scale=1" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <Header />
      {/* {data.url} */}
      {/* {data.title} ({data.author}) */}
      {/* <Pagination
        // currentPage={currentPage}
        // totalCount={totalPage}
        // pageSize={currentSize}
        currentPage={currentPage}
        totalCount={7}
        pageSize={2}
        onPageChange={handlePageChange}
      /> */}
      <main className="bg-grey">
        <div className="max-w-128 mx-auto flex pt-8 pb-8">
          <div className="w-2/6">
            <div className="h-60 w-60 mb-5">
              <img
                src="https://images.unsplash.com/photo-1678101629498-26e7ac3e74f6?ixlib=rb-4.0.3&ixid=MnwxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8&auto=format&fit=crop&w=387&q=80"
                alt="profile"
                className="h-60 w-60 rounded-full"
              />
            </div>

            <h2 className="mb-2 font-semibold text-2xl">
              {profileData?.data?.name}
            </h2>
            <p className="text-lg text-blue mb-7">{profileData?.data?.login}</p>

            <div className="flex gap-4">
              <div className="flex items-center gap-1">
                <MdGroup fontSize={20} />
                <span className="text-sm">
                  {profileData?.data?.followers}65.8k followers
                </span>
              </div>
              <div className="flex items-center gap-1">
                <BsFillPersonFill />
                <span className="text-sm">
                  {profileData?.data?.following} following
                </span>
              </div>
            </div>
          </div>
          <div className="w-4/6">
            <h1 className="text-3xl font-semibold mb-3">Repositories (249)</h1>
            <div>
              {repoData?.data.map((item: any, i: number) => {
                return (
                  <div key={i} className="mb-6 py-5 px-6 bg-white">
                    <h4 className="mb-1.5 text-blue text-xl font-medium">
                      {item.name}
                    </h4>
                    <p className="text-base">
                      Tweak React components in real time. (Deprecated: use Fast
                      Refresh instead.
                    </p>
                  </div>
                );
              })}
            </div>

            <div>
              ,lkljkbhjvgh
              <Pagination
                // currentPage={currentPage}
                // totalCount={totalPage}
                // pageSize={currentSize}
                currentPage={currentPage}
                totalCount={7}
                pageSize={2}
                onPageChange={handlePageChange}
              />
            </div>
          </div>
        </div>
      </main>
      {/* <main className={styles.main}>
        <div className={styles.description}>
          <p>
            Get started by editing&nbsp;
            <code className={styles.code}>pages/index.tsx</code>
          </p>
          <div>
            <a
              href="https://vercel.com?utm_source=create-next-app&utm_medium=default-template&utm_campaign=create-next-app"
              target="_blank"
              rel="noopener noreferrer"
            >
              By{" "}
              <Image
                src="/vercel.svg"
                alt="Vercel Logo"
                className={styles.vercelLogo}
                width={100}
                height={24}
                priority
              />
            </a>
          </div>
        </div>

        <div className={styles.center}>
          <Image
            className={styles.logo}
            src="/next.svg"
            alt="Next.js Logo"
            width={180}
            height={37}
            priority
          />
          <div className={styles.thirteen}>
            <Image
              src="/thirteen.svg"
              alt="13"
              width={40}
              height={31}
              priority
            />
          </div>
        </div>

        <div className={styles.grid}>
          <a
            href="https://nextjs.org/docs?utm_source=create-next-app&utm_medium=default-template&utm_campaign=create-next-app"
            className={styles.card}
            target="_blank"
            rel="noopener noreferrer"
          >
            <h2 className={inter.className}>
              Docs <span>-&gt;</span>
            </h2>
            <p className={inter.className}>
              Find in-depth information about Next.js features and&nbsp;API.
            </p>
          </a>

          <a
            href="https://nextjs.org/learn?utm_source=create-next-app&utm_medium=default-template&utm_campaign=create-next-app"
            className={styles.card}
            target="_blank"
            rel="noopener noreferrer"
          >
            <h2 className={inter.className}>
              Learn <span>-&gt;</span>
            </h2>
            <p className={inter.className}>
              Learn about Next.js in an interactive course with&nbsp;quizzes!
            </p>
          </a>

          <a
            href="https://vercel.com/templates?framework=next.js&utm_source=create-next-app&utm_medium=default-template&utm_campaign=create-next-app"
            className={styles.card}
            target="_blank"
            rel="noopener noreferrer"
          >
            <h2 className={inter.className}>
              Templates <span>-&gt;</span>
            </h2>
            <p className={inter.className}>
              Discover and deploy boilerplate example Next.js&nbsp;projects.
            </p>
          </a>

          <a
            href="https://vercel.com/new?utm_source=create-next-app&utm_medium=default-template&utm_campaign=create-next-app"
            className={styles.card}
            target="_blank"
            rel="noopener noreferrer"
          >
            <h2 className={inter.className}>
              Deploy <span>-&gt;</span>
            </h2>
            <p className={inter.className}>
              Instantly deploy your Next.js site to a shareable URL
              with&nbsp;Vercel.
            </p>
          </a>
        </div>
      </main> */}
    </>
  );
}

// export async function getServerSideProps() {
//   const res = await fetch(`http://localhost:3000/api`);
//   const data = await res.json();

//   console.log(data);

//   return { props: { data } };
// }
